[{"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/index.tsx":"1","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/reportWebVitals.ts":"2","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/App.tsx":"3","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/Header/Header.tsx":"4","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/HomeSection/HomeSection.tsx":"5","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/AboutSection/AboutSection.tsx":"6","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/EducationSection/EducationSection.tsx":"7","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/SkillsSection/SkillsSection.tsx":"8","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/Heading.tsx":"9","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/ContactSection/ContactSection.tsx":"10","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/Button.tsx":"11","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/NavLink.tsx":"12","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/SocialLinks.tsx":"13","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/Footer/Footer.tsx":"14","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/BurgerMenu/BurgerMenu.tsx":"15","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/ProjectsSection/ProjectsSection.tsx":"16","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/FixedButton.tsx":"17","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/utils/GlobalStyles.tsx":"18","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/ThemeSwitcherList/ThemeSwitcherList.tsx":"19","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/ColorThemes.ts":"20","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/utils/randomElementFromArray.ts":"21","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/SectionWrapper.tsx":"22","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/ReduxIcon.tsx":"23","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/TypeScriptIcon.tsx":"24","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/JestIcon.tsx":"25","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/StoryBookIcon.tsx":"26","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/AxiosIcon.tsx":"27","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/entities/projects.tsx":"28"},{"size":554,"mtime":1688464114274,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1685995746660,"results":"31","hashOfConfig":"30"},{"size":4965,"mtime":1693252567139,"results":"32","hashOfConfig":"30"},{"size":1236,"mtime":1692709712959,"results":"33","hashOfConfig":"30"},{"size":1815,"mtime":1692717290391,"results":"34","hashOfConfig":"30"},{"size":3020,"mtime":1692711963953,"results":"35","hashOfConfig":"30"},{"size":3872,"mtime":1692711971624,"results":"36","hashOfConfig":"30"},{"size":3404,"mtime":1692711928756,"results":"37","hashOfConfig":"30"},{"size":459,"mtime":1688210134569,"results":"38","hashOfConfig":"30"},{"size":3253,"mtime":1692711908010,"results":"39","hashOfConfig":"30"},{"size":1432,"mtime":1692717194039,"results":"40","hashOfConfig":"30"},{"size":1172,"mtime":1692710767857,"results":"41","hashOfConfig":"30"},{"size":1811,"mtime":1688224468294,"results":"42","hashOfConfig":"30"},{"size":406,"mtime":1689432583545,"results":"43","hashOfConfig":"30"},{"size":1179,"mtime":1692710492977,"results":"44","hashOfConfig":"30"},{"size":3325,"mtime":1693254115743,"results":"45","hashOfConfig":"30"},{"size":1131,"mtime":1689432590339,"results":"46","hashOfConfig":"30"},{"size":715,"mtime":1692554645236,"results":"47","hashOfConfig":"30"},{"size":1234,"mtime":1688396825515,"results":"48","hashOfConfig":"30"},{"size":747,"mtime":1689432101342,"results":"49","hashOfConfig":"30"},{"size":136,"mtime":1689431927655,"results":"50","hashOfConfig":"30"},{"size":421,"mtime":1690136616802,"results":"51","hashOfConfig":"30"},{"size":2016,"mtime":1690217098588,"results":"52","hashOfConfig":"30"},{"size":1228,"mtime":1690217123440,"results":"53","hashOfConfig":"30"},{"size":7324,"mtime":1690217085054,"results":"54","hashOfConfig":"30"},{"size":2594,"mtime":1690217111728,"results":"55","hashOfConfig":"30"},{"size":6411,"mtime":1690217063782,"results":"56","hashOfConfig":"30"},{"size":3485,"mtime":1693254050628,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"je433j",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/index.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/reportWebVitals.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/App.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/Header/Header.tsx",["152","153","154"],[],"import React, { FC, UIEvent, memo, useState } from \"react\";\nimport s from \"./header.module.css\";\nimport { UilBars } from \"@iconscout/react-unicons\";\nimport NavLink from \"../../shared/NavLink\";\nimport { NavLinkType } from \"../../App\";\n\ntype HeaderProps = {\n  isBurgerMenuShowed: boolean;\n  showBurgerMenu: () => void;\n  navLinksState: NavLinkType[];\n  setActiveBtnNav: (e: any) => void\n};\n\nconst Header: FC<HeaderProps> = memo((props) => {\n  window.onscroll = () => {\n    document\n      .querySelector(\"header\")\n      ?.classList.toggle(s.sticky, window.pageYOffset > 100);\n  };\n\n  const navLinksRender = () => {\n    return props.navLinksState.map((navLink) => {\n      return (\n        <NavLink\n          key={navLink.title}\n          id={navLink.id}\n          title={navLink.title}\n          isActive={navLink.isActive}\n          href={navLink.href}\n          setActiveBtnNav={props.setActiveBtnNav}\n        />\n      );\n    });\n  };\n\n  return (\n    <header className={s.header}>\n      <a className={s.logo}>Danila-beep</a>\n\n      <nav className={s.navbar}>{navLinksRender()}</nav>\n\n      <div className={s.burger} onClick={props.showBurgerMenu}>\n        <UilBars size={40} />\n      </div>\n    </header>\n  );\n});\n\nexport default Header;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/HomeSection/HomeSection.tsx",["155"],[],"import React, { useEffect } from \"react\";\nimport Button from \"../../shared/Button\";\nimport Heading from \"../../shared/Heading\";\nimport s from \"./homeSection.module.css\";\nimport { SectionWrapper } from \"../../shared/SectionWrapper\";\nimport { SectionType } from \"../../App\";\n//@ts-ignore\nimport cv from \"../../assets/files/CV.pdf\"\n\nconst HomeSection = (props: SectionType) => {\n  return (\n    <SectionWrapper id={props.hrefId}>\n      <div className={s.homeContainer}>\n        <div className={s.homeContent}>\n          <Heading>\n            <span>Danila Nagovicin</span>\n          </Heading>\n\n          <div className={s.textAnimate}>\n            <h3>Front-End Разработчик</h3>\n          </div>\n          <p>\n            Привет! Я - junior React разработчик с опытом разработки с\n            использованием React, JavaScript, HTML и CSS. Я стараюсь создавать\n            качественные веб-приложения, используя аккуратный и эффективный код.\n            На этом сайте вы найдете примеры моих проектов, которые\n            демонстрируют мои навыки и стиль разработки. Если у вас есть вопросы\n            или предложения, свяжитесь со мной!\n          </p>\n          <div className={s.buttonBox}>\n            <Button\n              title={\"Download CV\"}\n              theme={\"dark\"}\n              download\n              link={cv}\n            />\n            <Button title={\"Let`s talk\"} theme={\"light\"} />\n          </div>\n        </div>\n        <div className={s.homePhoto}></div>\n      </div>\n    </SectionWrapper>\n  );\n};\n\nexport default HomeSection;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/AboutSection/AboutSection.tsx",["156","157"],[],"import s from \"./aboutSection.module.css\";\nimport Button from \"../../shared/Button\";\nimport Heading from \"../../shared/Heading\";\nimport { SectionWrapper } from \"../../shared/SectionWrapper\";\nimport { SectionType } from \"../../App\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useEffect } from \"react\";\n\nconst AboutSection = (props: SectionType) => {\n\n  return (\n    <SectionWrapper id={props.hrefId} invertedColor>\n      <div className={s.aboutContainer}>\n        <Heading>\n          About <span>Me</span>\n        </Heading>\n\n        <div className={s.aboutRow}>\n          <div className={s.photoColumn}>\n            <div className={s.aboutImgWrapper}>\n              <div className={s.aboutPhoto}></div>\n              <div className={s.circleSpin}></div>\n            </div>\n          </div>\n\n          <div className={s.contentColumn}>\n            <div className={s.aboutContent}>\n              <h3>Front-End Разработчик</h3>\n              <p>\n                Я стремлюсь к постоянному развитию и улучшению своих навыков\n                разработки, изучаю новые концепции и инструменты,\n                чтобы быть в курсе последних тенденций в сфере разработки. \n                <br/>\n                Мне нравится работать в команде, обмениваться идеями и решать\n                сложные задачи совместно. Я горжусь своими проектами, которые я\n                разработал в процессе обучения и самостоятельно.\n                <br/>\n                Каждый проект -это возможность продемонстрировать мои навыки и творческий\n                подход к разработке. Я уделяю особое внимание деталям и\n                стремлюсь создавать качественные и привлекательные продукты. \n                <br/>\n                Я открыт для новых вызовов и готов принять участие в интересных проектах.\n                Если у вас есть идеи или предложения, я буду рад обсудить\n                возможное сотрудничество.\n                <br/>\n                Пожалуйста, ознакомьтесь с моим портфолио и не стесняйтесь связаться со мной, если у вас есть\n                вопросы или комментарии.\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className={s.btnBox}>\n          <Button title={\"Read More\"} />\n        </div>\n      </div>\n    </SectionWrapper>\n  );\n};\n\nexport default AboutSection;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/EducationSection/EducationSection.tsx",["158","159"],[],"import React, { useEffect } from \"react\";\nimport s from \"./educationSection.module.css\";\nimport { UilCalender } from \"@iconscout/react-unicons\";\nimport Heading from \"../../shared/Heading\";\nimport { SectionWrapper } from \"../../shared/SectionWrapper\";\nimport { SectionType } from \"../../App\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst EducationSection = (props: SectionType) => {\n\n  return (\n    <SectionWrapper id={props.hrefId}>\n      <div className={s.educationContainer}>\n        <Heading centered>\n          My <span>Education</span>\n          {/* and <span>Experience</span> */}\n        </Heading>\n\n        <div className={s.educationRow}>\n          <div className={s.educationColumn}>\n            <h3 className={s.title}>Education</h3>\n            <div className={s.educationBox}>\n              <div className={s.educationContent}>\n                <div className={s.timeLine}>\n                  <div className={s.contentBox}>\n                    <div className={s.year}>\n                      <UilCalender />\n                      2020 - ... | Московский государственный университет имени Кутафина\n                    </div>\n                    <h3>Юриспруденция (бакалавриат)</h3>\n                  </div>\n                </div>\n              </div>\n              <div className={s.educationContent}>\n                <div className={s.timeLine}>\n                  <div className={s.contentBox}>\n                    <div className={s.year}>\n                      <UilCalender />\n                      2023 - ... | It-Incubator\n                    </div>\n                    <h3>Front-End Developer</h3>\n                    <p>\n                      Во время обучения мною были изучены фундаментальные\n                      принципы програмирования. \n                      <br />\n                      На основе опыта преподавателей я\n                      смог узнать каким образом ведется коммерческая разработка,\n                      а также какие приемы и инструменты используются в\n                      продакшене\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <div className={s.educationColumn}>\n            <h3 className={s.title}>Education</h3>\n            <div className={s.educationBox}>\n              <div className={s.educationContent}>\n                <div className={s.timeLine}>\n                  <div className={s.contentBox}>\n                    <div className={s.year}>\n                      <UilCalender />\n                      2003 - 2023\n                    </div>\n                    <h3>Lorem ipsum.</h3>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                      Consequatur, soluta.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className={s.educationContent}>\n                <div className={s.timeLine}>\n                  <div className={s.contentBox}>\n                    <div className={s.year}>\n                      <UilCalender />\n                      2003 - 2023\n                    </div>\n                    <h3>Lorem ipsum.</h3>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                      Consequatur, soluta.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </div>\n    </SectionWrapper>\n  );\n};\n\nexport default EducationSection;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/SkillsSection/SkillsSection.tsx",["160"],[],"import React, { memo, useEffect, useRef } from \"react\";\nimport s from \"./skillsSection.module.css\";\nimport Heading from \"../../shared/Heading\";\nimport { SectionWrapper } from \"../../shared/SectionWrapper\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\nimport { SectionType } from \"../../App\";\n\nconst SkillsSection = memo((props: SectionType) => {\n\n\n  const [ref, inView] = useInView();\n  const html = useAnimation();\n  const css = useAnimation();\n  const js = useAnimation();\n  const react = useAnimation();\n  const rest = useAnimation();\n\n  useEffect(() => {\n    if (inView) {\n      html.start({\n        width: \"100%\",\n        transition: { type: \"keyframes\", duration: 3 },\n      });\n      css.start({\n        width: \"100%\",\n        transition: { type: \"keyframes\", duration: 3 },\n      });\n      js.start({\n        width: \"80%\",\n        transition: { type: \"keyframes\", duration: 3 },\n      });\n      react.start({\n        width: \"70%\",\n        transition: { type: \"keyframes\", duration: 3 },\n      });\n      rest.start({\n        width: \"70%\",\n        transition: { type: \"keyframes\", duration: 3 },\n      });\n    }\n    if (!inView) {\n      html.start({ width: \"1%\" });\n      css.start({ width: \"1%\" });\n      js.start({ width: \"1%\" });\n      react.start({ width: \"1%\" });\n      rest.start({ width: \"1%\" });\n    }\n\n  }, [inView, html, css, react, js, rest]);\n\n\n  return (\n    <SectionWrapper id={props.hrefId} ref={ref} invertedColor>\n      <div className={s.skillsContainer}>\n        <Heading centered>\n          My <span>skills</span>\n        </Heading>\n\n        <div className={s.skillsRow}>\n          <div className={s.skillsColumn}>\n            <h3 className={s.title}>Coding skills</h3>\n\n            <div className={s.skillsBox}>\n              <div className={s.skillsContent}>\n                <div className={s.progress}>\n                  <h3>\n                    Html <span>100%</span>\n                  </h3>\n                  <div className={s.bar}>\n                    <motion.span animate={html} />\n                  </div>\n                </div>\n                <div className={s.progress}>\n                  <h3>\n                    CSS <span>100%</span>\n                  </h3>\n                  <div className={s.bar}>\n                    <motion.span animate={css} />\n                  </div>\n                </div>\n                <div className={s.progress}>\n                  <h3>\n                    JavaScript / TypeScript <span>80%</span>\n                  </h3>\n                  <div className={s.bar}>\n                    <motion.span animate={js} />\n                  </div>\n                </div>\n                <div className={s.progress}>\n                  <h3>\n                    React / Redux <span>70%</span>\n                  </h3>\n                  <div className={s.bar}>\n                    <motion.span animate={react} />\n                  </div>\n                </div>\n                <div className={s.progress}>\n                  <h3>\n                    RestAPI <span>70%</span>\n                  </h3>\n                  <div className={s.bar}>\n                    <motion.span animate={rest} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </SectionWrapper>\n  );\n});\n\nexport default SkillsSection;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/Heading.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/ContactSection/ContactSection.tsx",["161","162","163","164"],[],"import React, { memo, useEffect, useRef } from \"react\";\nimport s from \"./contactSection.module.css\";\nimport Heading from \"../../shared/Heading\";\nimport Button from \"../../shared/Button\";\nimport { SectionWrapper } from \"../../shared/SectionWrapper\";\nimport { useFormik } from \"formik\";\nimport emailjs from \"@emailjs/browser\";\nimport { SectionType } from \"../../App\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst ContactSection = memo((props: SectionType) => {\n\n  const handleClick = (data: any) => {\n    emailjs\n      .send(\"service_5rwdk5g\", \"template_79lqrda\", data, \"niKAnRJCetimFhpXR\")\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      from_name: \"\",\n      user_email: \"\",\n      user_phone: \"\",\n      some_additionals: \"\",\n      message: \"\",\n    },\n    onSubmit: (values) => {\n      debugger;\n      handleClick(values);\n    },\n  });\n\n  return (\n    <SectionWrapper id={props.hrefId} invertedColor >\n      <div className={s.contactContainer}>\n        <Heading>\n          Contact <span>Me</span>\n        </Heading>\n\n        <form onSubmit={formik.handleSubmit} className={s.contactForms}>\n          <div className={s.inputBox}>\n            <div className={s.inputField}>\n              <input\n                type=\"text\"\n                placeholder={\"Name\"}\n                // name=\"from_name\"\n                {...formik.getFieldProps(\"from_name\")}\n              />\n              <span className={s.focus}></span>\n            </div>\n            <div className={s.inputField}>\n              <input\n                type=\"email\"\n                placeholder={\"Contact E-Mail\"}\n                // name=\"user_email\"\n                {...formik.getFieldProps(\"user_email\")}\n              />\n              <span className={s.focus}></span>\n            </div>\n          </div>\n\n          <div className={s.inputBox}>\n            <div className={s.inputField}>\n              <input\n                type=\"phone\"\n                placeholder={\"Contact phone / telegram (optional)\"}\n                // name=\"user_phone\"\n                {...formik.getFieldProps(\"user_phone\")}\n              />\n              <span className={s.focus}></span>\n            </div>\n            <div className={s.inputField}>\n              <input\n                type=\"text\"\n                placeholder={\"Some additional contacts (optional)\"}\n                // name=\"some_additionals\"\n                {...formik.getFieldProps(\"some_additionals\")}\n              />\n              <span className={s.focus}></span>\n            </div>\n          </div>\n\n          <div className={s.textAreaField}>\n            <textarea\n              cols={30}\n              rows={10}\n              placeholder={\"Your message\"}\n              // name=\"message\"\n\n              {...formik.getFieldProps(\"message\")}\n            ></textarea>\n            <span className={s.focus}></span>\n          </div>\n          <input\n            type=\"submit\"\n            className={s.submitButton}\n            // onClick={handleClick}\n          />\n        </form>\n      </div>\n    </SectionWrapper>\n  );\n});\n\nexport default ContactSection;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/Button.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/NavLink.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/SocialLinks.tsx",["165"],[],"import React, {FC} from 'react'\nimport s from \"./socialLinks.module.css\"\nimport { UilFacebook, UilLinkedin, UilTwitter } from '@iconscout/react-unicons'\nimport styled from 'styled-components'\n\ntype SocialMediaTypes = \"FaceBook\" | \"Twitter\" | \"LinkedIn\"\n\ntype SocialLinkProps = {\n    socialMedia: SocialMediaTypes\n}\n\nconst SocialLink: FC<SocialLinkProps> = (props) => {\n\n    const socialMediaChecker = (): JSX.Element | undefined => {\n        switch (props.socialMedia) {\n            case \"FaceBook\":\n                return <UilFacebook size={\"2.5rem\"}/>\n            case \"Twitter\": \n                return <UilTwitter size={\"2.5rem\"}/>\n            case \"LinkedIn\":\n                return <UilLinkedin size={\"2.5rem\"}/>\n            default:\n                return (\n                    <div>\n                        Undefined\n                    </div>\n                )\n        }\n    }\n\n    const AStyled = styled.a`\n        position: relative;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        width: 4rem;\n        height: 4rem;\n        background: transparent;\n        border: .2rem solid var(--main-color);\n        border-radius: 50%;\n        color: var(--main-color);\n        z-index: 1;\n        overflow: hidden;\n        transition: .5s;\n\n        &:hover {\n            color: var(--bg-color);\n        }\n        &::before {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 0;\n            height: 100%;\n            background: var(--main-color);\n            z-index: -1;\n            transition: .5s;\n        }\n        &:hover::before {\n            width: 100%;\n        }\n    `\n\n  return (\n    <AStyled href=\"#\">\n        {socialMediaChecker()}\n    </AStyled>\n  )\n}\n\nexport default SocialLink",[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/Footer/Footer.tsx",["166","167"],[],"import React from \"react\";\nimport s from \"./footer.module.css\";\nimport { UilArrowUp } from \"@iconscout/react-unicons\";\nimport SocialLink from \"../../shared/SocialLinks\";\n\nconst Footer = () => {\n  return (\n    <footer className={s.footer}>\n      <div className={s.footerIconTop}>\n        <a href=\"\">\n          <UilArrowUp size={25} />\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/BurgerMenu/BurgerMenu.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/ProjectsSection/ProjectsSection.tsx",["168","169","170"],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/FixedButton.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/utils/GlobalStyles.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/Components/ThemeSwitcherList/ThemeSwitcherList.tsx",[],[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/ColorThemes.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/utils/randomElementFromArray.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/shared/SectionWrapper.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/ReduxIcon.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/TypeScriptIcon.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/JestIcon.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/StoryBookIcon.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/assets/svgs/AxiosIcon.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/SelfWork/Portfolio/Portfolio_2/src/entities/projects.tsx",["171"],[],{"ruleId":"172","severity":1,"message":"173","line":1,"column":21,"nodeType":"174","messageId":"175","endLine":1,"endColumn":28},{"ruleId":"172","severity":1,"message":"176","line":1,"column":36,"nodeType":"174","messageId":"175","endLine":1,"endColumn":44},{"ruleId":"177","severity":1,"message":"178","line":38,"column":7,"nodeType":"179","endLine":38,"endColumn":29},{"ruleId":"172","severity":1,"message":"180","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"181","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":19},{"ruleId":"172","severity":1,"message":"180","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":19},{"ruleId":"172","severity":1,"message":"180","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"181","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":19},{"ruleId":"172","severity":1,"message":"182","line":1,"column":34,"nodeType":"174","messageId":"175","endLine":1,"endColumn":40},{"ruleId":"172","severity":1,"message":"180","line":1,"column":23,"nodeType":"174","messageId":"175","endLine":1,"endColumn":32},{"ruleId":"172","severity":1,"message":"182","line":1,"column":34,"nodeType":"174","messageId":"175","endLine":1,"endColumn":40},{"ruleId":"172","severity":1,"message":"183","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":19},{"ruleId":"172","severity":1,"message":"184","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":9},{"ruleId":"172","severity":1,"message":"185","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":18},{"ruleId":"177","severity":1,"message":"186","line":10,"column":9,"nodeType":"179","endLine":10,"endColumn":20},{"ruleId":"172","severity":1,"message":"180","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"181","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":19},{"ruleId":"172","severity":1,"message":"187","line":11,"column":26,"nodeType":"174","messageId":"175","endLine":11,"endColumn":43},{"ruleId":"172","severity":1,"message":"188","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":23},"@typescript-eslint/no-unused-vars","'UIEvent' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useInView' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'s' is defined but never used.","'SocialLink' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'setFilterNavItems' is assigned a value but never used.","'componentsImage' is defined but never used."]